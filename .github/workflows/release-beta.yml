name: Release Beta

# Automatically publish beta releases on push to main
on:
  push:
    branches:
      - main
    paths:
      - 'packages/**'
      - '!packages/**/*.md'
      - '!packages/**/*.spec.ts'

permissions:
  contents: write
  id-token: write

jobs:
  release-beta:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10.18.2
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm exec nx run toolkit:lint toolkit:test toolkit:build

      - name: Check if version should be bumped
        id: should_release
        run: |
          # Get the latest tag
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"

          # Check if there are changes in packages since last tag
          if git diff --quiet $LATEST_TAG HEAD -- packages/; then
            echo "No changes in packages since last tag"
            echo "should_release=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected in packages"
            echo "should_release=true" >> $GITHUB_OUTPUT
          fi

      - name: Release Beta
        if: steps.should_release.outputs.should_release == 'true'
        run: |
          # Version as prerelease with beta tag
          pnpm exec nx release version prerelease --preid=beta --skip-publish

          # Publish to npm with beta tag
          pnpm exec nx release publish --tag=beta
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Summary
        if: steps.should_release.outputs.should_release == 'true'
        run: |
          echo "## Beta Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Published to npm with \`beta\` tag" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Install with: \`npm install @ngx-signal-forms/toolkit@beta\`" >> $GITHUB_STEP_SUMMARY
